package org.sopware.services.demo.whiteboard;

import javax.jws.Oneway;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;

/**
 * This class was generated by Apache CXF 2.3.1
 * Wed Dec 22 08:46:48 CET 2010
 * Generated source version: 2.3.1
 * 
 */
 
@WebService(targetNamespace = "http://services.sopware.org/demo/Whiteboard", name = "Whiteboard")
@XmlSeeAlso({ObjectFactory.class})
public interface Whiteboard {

    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(name = "readResponse", targetNamespace = "http://services.sopware.org/demo/Whiteboard", partName = "parameters")
    @WebMethod(action = "http://services.sopware.org/demo/Whiteboard/WhiteboardProvider/read")
    public AnyType read(
        @WebParam(partName = "parameters", name = "read", targetNamespace = "http://services.sopware.org/demo/Whiteboard")
        Read parameters
    ) throws ReadFaultMsg;

    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(name = "echoResponse", targetNamespace = "http://services.sopware.org/demo/Whiteboard", partName = "parameters")
    @WebMethod(action = "http://services.sopware.org/demo/Whiteboard/WhiteboardProvider/echo")
    public AnyType echo(
        @WebParam(partName = "parameters", name = "echo", targetNamespace = "http://services.sopware.org/demo/Whiteboard")
        AnyType parameters
    );

    @Oneway
    @RequestWrapper(localName = "write", targetNamespace = "http://services.sopware.org/demo/Whiteboard", className = "org.sopware.services.demo.whiteboard.Write")
    @WebMethod(action = "http://services.sopware.org/demo/Whiteboard/WhiteboardProvider/write")
    public void write(
        @WebParam(name = "key", targetNamespace = "")
        java.lang.String key,
        @WebParam(name = "value", targetNamespace = "")
        org.sopware.services.demo.whiteboard.AnyType value
    );
}
